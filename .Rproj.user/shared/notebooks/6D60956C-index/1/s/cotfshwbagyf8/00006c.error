{"frames":[{"func":"gam(WinA ~ s(SeedA) + s(SeedB) + s(WinRatioA) + s(WinRatioB) + \n    s(GapAvgA) + s(GapAvgB) + s(SeedDiff) + s(WinRatioDiff) + \n    s(GapAvgDiff) + te(SeedA, SeedB, WinRatioA, WinRatioB, GapAvgA, \n    GapAvgB), data = bb_train)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"do.call(gsname, list(formula = gp, pterms = pterms, data = mf, \n    knots = knots, sp = sp, min.sp = min.sp, H = H, absorb.cons = TRUE, \n    sparse.cons = 0, select = select, idLinksBases = control$idLinksBases, \n    scale.penalty = control$scalePenalty, paraPen = paraPen,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"gam.setup(formula = structure(list(pf = WinA ~ 1, pfok = 1, smooth.spec = list(\n    structure(list(term = \"SeedA\", bs.dim = -1, fixed = FALSE, \n        dim = 1L, p.order = NA, by = \"NA\", label = \"s(SeedA)\", \n        xt = NULL, id = NULL, sp = NULL), class = \"tp.smooth.spec\"),  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"smoothCon(split$smooth.spec[[i]], data, knots, absorb.cons, scale.penalty = scale.penalty, \n    null.space.penalty = select, sparse.cons = sparse.cons, diagonal.penalty = diagonal.penalty, \n    apply.by = apply.by, modCon = modCon)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"promise already under evaluation: recursive default argument reference or earlier problems?"}